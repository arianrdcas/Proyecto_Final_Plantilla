{"ast":null,"code":"const getState = _ref => {\n  let {\n    getStore,\n    getActions,\n    setStore\n  } = _ref;\n  return {\n    store: {\n      nombre: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    actions: {\n      handleChange: e => {\n        setStore({\n          [e.target.name]: e.target.value\n        });\n      },\n      register: state => {\n        //datos \n        fetch(\"http://127.0.0.1:5000/api/register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(state) //datos\n\n        }).then(resp => resp.json()).then(response => console.log(response)).catch(error => console.error(error));\n      }\n    }\n  };\n};\n/* const registrarse = async () => {\r\n        let item = {name,password,email}\r\n        let data = await fetch(`http://localhost:5000/register`,{\r\n            'method':'POST',\r\n            headers : {\r\n            'Content-Type':'application/json',\r\n            \"Accept\" :'application/json' \r\n            },\r\n        body:JSON.stringify(item)\r\n        })\r\n        if(data.ok){\r\n            let datos = await data.json();\r\n            //console.log(datos)\r\n            localStorage.clear();\r\n            window.location.href = '/';\r\n            alert(\"Usuario registrado satisfactoriamente\")\r\n        }\r\n    } */\n\n\nexport default getState;","map":{"version":3,"sources":["D:/ProyectosArian/Trabajo_Final_agosto/frontend/src/store/flux.js"],"names":["getState","getStore","getActions","setStore","store","nombre","email","password","actions","handleChange","e","target","name","value","register","state","fetch","method","headers","body","JSON","stringify","then","resp","json","response","console","log","catch","error"],"mappings":"AAAA,MAAMA,QAAQ,GAAE,QAAoC;AAAA,MAAnC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,GAAmC;AAChD,SAAM;AACFC,IAAAA,KAAK,EAAC;AACFC,MAAAA,MAAM,EAAC,EADL;AAEFC,MAAAA,KAAK,EAAC,EAFJ;AAGFC,MAAAA,QAAQ,EAAC;AAHP,KADJ;AAOFC,IAAAA,OAAO,EAAE;AACLC,MAAAA,YAAY,EAAGC,CAAC,IAAI;AAChBP,QAAAA,QAAQ,CAAC;AACP,WAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AADnB,SAAD,CAAR;AAGH,OALI;AAMLC,MAAAA,QAAQ,EAAGC,KAAD,IAAW;AAAE;AACnBC,QAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,UAAAA,MAAM,EAAE,MADkC;AAE1CC,UAAAA,OAAO,EAAE;AAAE,4BAAiB;AAAnB,WAFiC;AAG1CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,KAAf,CAHoC,CAGb;;AAHa,SAAvC,CAAL,CAKGO,IALH,CAKSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EALlB,EAMGF,IANH,CAMSG,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CANtB,EAOGG,KAPH,CAOUC,KAAD,IAAWH,OAAO,CAACG,KAAR,CAAcA,KAAd,CAPpB;AAQH;AAfI;AAPP,GAAN;AA6BH,CA9BD;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe7B,QAAf","sourcesContent":["const getState =({getStore, getActions, setStore})=>{\r\n    return{\r\n        store:{\r\n            nombre:\"\",\r\n            email:\"\",\r\n            password:\"\"\r\n        },\r\n\r\n        actions: {\r\n            handleChange : e => {\r\n                setStore({\r\n                  [e.target.name]: e.target.value\r\n                })\r\n            }, \r\n            register: (state) => { //datos \r\n                fetch(\"http://127.0.0.1:5000/api/register\", {\r\n                  method: \"POST\",\r\n                  headers: { \"Content-type\" : \"application/json\"},\r\n                  body: JSON.stringify(state), //datos\r\n                })\r\n                  .then((resp) => resp.json())\r\n                  .then((response) => console.log(response))\r\n                  .catch((error) => console.error(error));\r\n            },\r\n        }\r\n\r\n        \r\n    \r\n\r\n    }\r\n};\r\n\r\n/* const registrarse = async () => {\r\n        let item = {name,password,email}\r\n        let data = await fetch(`http://localhost:5000/register`,{\r\n            'method':'POST',\r\n            headers : {\r\n            'Content-Type':'application/json',\r\n            \"Accept\" :'application/json' \r\n            },\r\n        body:JSON.stringify(item)\r\n        })\r\n        if(data.ok){\r\n            let datos = await data.json();\r\n            //console.log(datos)\r\n            localStorage.clear();\r\n            window.location.href = '/';\r\n            alert(\"Usuario registrado satisfactoriamente\")\r\n        }\r\n    } */\r\nexport default getState;"]},"metadata":{},"sourceType":"module"}