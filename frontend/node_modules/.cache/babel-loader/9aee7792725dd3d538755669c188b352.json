{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProyectosArian\\\\final-zombiz\\\\src\\\\components\\\\Form.js\";\nimport { useState } from \"react\";\nimport FormRegister from \"./FormRegister\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  /*const [state, setState] = useState ({\r\n      username: sessionStorage.getItem('username') ? sessionStorage.getItem('username') : '',\r\n      username: sessionStorage.getItem('password') ? sessionStorage.getItem('password') : '',  \r\n  })\r\n  \r\n    const [state, setState] = useState ({\r\n      username : '',\r\n      password : '',\r\n      mensaje : '',\r\n      error : null,\r\n      rememberme : true\r\n  })\r\n    const onSubmit = (e) => {\r\n      e.preventDefault ();\r\n      console.log(\"Enviando formulario\");\r\n      let hasError = false\r\n      if(e.target.username.value === \"\") { \r\n          setState(prevState => {\r\n              return {\r\n                  ...prevState,\r\n                  error: {\r\n                      ...prevState.error,\r\n                      username:{\r\n                          msg : 'Username is required',\r\n                      } \r\n                  }\r\n              }    \r\n          })\r\n          hasError = true;\r\n      } else {\r\n          setState(prevState => {\r\n              delete prevState.error?.username;\r\n              return {\r\n                  ...prevState, \r\n              }\r\n          })\r\n      } \r\n      if (e.target.password.value === \"\") {\r\n          setState(prevState => {\r\n              return {\r\n                  ...prevState,\r\n                  error: {\r\n                      ...prevState.error,\r\n                      password:{\r\n                          msg : 'Password is required',\r\n                      } \r\n                  }\r\n              }    \r\n          })\r\n          hasError = true;\r\n      } else {\r\n          setState(prevState => {\r\n              delete prevState.error?.password;\r\n              return {\r\n                  ...prevState, \r\n              }\r\n          })\r\n      } \r\n      \r\n      if (hasError) return;\r\n        getLogin({\r\n          username: e.target.username.value,\r\n          password: e.target.password.value,\r\n      })\r\n  }   \r\n    const handleChange = e => {\r\n      setState({\r\n          ...state,\r\n          [e.target.name]: e.target.value\r\n      })\r\n  }\r\n    const handleChangeCheckBox = e => {\r\n      setState({\r\n          ...state,\r\n          [e.target.name]: e.target.checked ? true : false\r\n      })\r\n  }\r\n    const getLogin = data => {\r\n      console.log(data)\r\n        /*fetch(\"/\", {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          }\r\n      })\r\n          .then(resp => resp.json())\r\n          .then(data => {\r\n              console.log(\"Codigo si no es un usuario valido\");\r\n          })*/\n  sessionStorage.setItem('username', data.username);\n  sessionStorage.setItem('password', data.password);\n\n  if (state.rememberme) {\n    localStorage.setItem('username', data.username);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"reg\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/#\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \".bs-example-modal-sm\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }, this), \"/\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/#\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \".bs-example-modal-lg\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal fade bs-example-modal-sm\",\n        tabIndex: -1,\n        role: \"dialog\",\n        \"aria-labelledby\": \"mySmallModalLabel\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog modal-sm\",\n          role: \"document\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close\",\n                \"data-dismiss\": \"modal\",\n                \"aria-label\": \"Close\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"modal-title\",\n                id: \"mySmallModalLabel\",\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"sm-frm\",\n                style: {\n                  padding: 25\n                },\n                onSubmit: onSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Name :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"username\",\n                  className: \"form-control\",\n                  placeholder: \"Enter Username\",\n                  value: state.username,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this), !!state.error && state.error.username ? state.error.username.msg : \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Passoward :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Enter Passoward\",\n                  value: state.password,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this), !!state.error && state.error.password ? state.error.password.msg : \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"rememberme\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, this), \" Remenber Me\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-default pull-right\",\n                  type: \"submit\",\n                  value: \"Submit\",\n                  onChange: handleChangeCheckBox,\n                  value: true,\n                  checked: state.rememberme,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(FormRegister, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/ProyectosArian/final-zombiz/src/components/Form.js"],"names":["useState","FormRegister","Form","sessionStorage","setItem","data","username","password","state","rememberme","localStorage","padding","onSubmit","handleChange","error","msg","handleChangeCheckBox"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport FormRegister from \"./FormRegister\";\r\n\r\n\r\nconst Form = () => {\r\n    /*const [state, setState] = useState ({\r\n        username: sessionStorage.getItem('username') ? sessionStorage.getItem('username') : '',\r\n        username: sessionStorage.getItem('password') ? sessionStorage.getItem('password') : '',  \r\n    })\r\n    \r\n\r\n    const [state, setState] = useState ({\r\n        username : '',\r\n        password : '',\r\n        mensaje : '',\r\n        error : null,\r\n        rememberme : true\r\n    })\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault ();\r\n        console.log(\"Enviando formulario\");\r\n        let hasError = false\r\n        if(e.target.username.value === \"\") { \r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    error: {\r\n                        ...prevState.error,\r\n                        username:{\r\n                            msg : 'Username is required',\r\n                        } \r\n                    }\r\n                }    \r\n            })\r\n            hasError = true;\r\n        } else {\r\n            setState(prevState => {\r\n                delete prevState.error?.username;\r\n                return {\r\n                    ...prevState, \r\n                }\r\n            })\r\n        } \r\n        if (e.target.password.value === \"\") {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    error: {\r\n                        ...prevState.error,\r\n                        password:{\r\n                            msg : 'Password is required',\r\n                        } \r\n                    }\r\n                }    \r\n            })\r\n            hasError = true;\r\n        } else {\r\n            setState(prevState => {\r\n                delete prevState.error?.password;\r\n                return {\r\n                    ...prevState, \r\n                }\r\n            })\r\n        } \r\n        \r\n        if (hasError) return;\r\n\r\n        getLogin({\r\n            username: e.target.username.value,\r\n            password: e.target.password.value,\r\n        })\r\n    }   \r\n\r\n    const handleChange = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleChangeCheckBox = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.checked ? true : false\r\n        })\r\n    }\r\n\r\n    const getLogin = data => {\r\n        console.log(data)\r\n\r\n        /*fetch(\"/\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                console.log(\"Codigo si no es un usuario valido\");\r\n            })*/\r\n\r\n            sessionStorage.setItem('username' , data.username);\r\n            sessionStorage.setItem('password' , data.password);\r\n            if(state.rememberme){\r\n                localStorage.setItem('username', data.username)\r\n            }\r\n\r\n    return ( \r\n        <>\r\n                <li className=\"reg\">\r\n                            <a href=\"/#\" data-toggle=\"modal\" data-target=\".bs-example-modal-sm\">\r\n                            Log in\r\n                            </a>\r\n                            /\r\n                            <a href=\"/#\" data-toggle=\"modal\" data-target=\".bs-example-modal-lg\">\r\n                            Register\r\n                            </a>\r\n                            {/* small modal */}\r\n                            <div\r\n                            className=\"modal fade bs-example-modal-sm\"\r\n                            tabIndex={-1}\r\n                            role=\"dialog\"\r\n                            aria-labelledby=\"mySmallModalLabel\"\r\n                            >\r\n                            <div className=\"modal-dialog modal-sm\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <button\r\n                                    type=\"button\"\r\n                                    className=\"close\"\r\n                                    data-dismiss=\"modal\"\r\n                                    aria-label=\"Close\"\r\n                                    >\r\n                                    <span aria-hidden=\"true\">\r\n                                        <i className=\"fa fa-close\" />\r\n                                    </span>\r\n                                    </button>\r\n                                    <h4 className=\"modal-title\" id=\"mySmallModalLabel\">\r\n                                    Sign In\r\n                                    </h4>\r\n                                    <form className=\"sm-frm\" style={{ padding: 25 }} onSubmit={onSubmit}>\r\n                                    <label>Name :</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter Username\"\r\n                                        value={state.username}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    \r\n                                    {!!state.error && state.error.username ? state.error.username.msg : \"\"}\r\n\r\n                                    <label>Passoward :</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Enter Passoward\"\r\n                                        value={state.password}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    {!!state.error && state.error.password ? state.error.password.msg : \"\"}\r\n                                    <label>\r\n                                        <input type=\"checkbox\" name=\"rememberme\"  /> Remenber Me\r\n                                    </label>\r\n                                    <button\r\n                                        \r\n                                        className=\"btn btn-default pull-right\" type=\"submit\" value=\"Submit\" \r\n                                        onChange={handleChangeCheckBox} value={true} checked={state.rememberme}\r\n                                    >\r\n                                        Submit\r\n                                    </button>\r\n                                    </form>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            \r\n                                    <FormRegister/>\r\n                                \r\n                        </li>\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}