{"ast":null,"code":"export default class APIUser {\n  static AutenticaUser(body) {\n    console.log(body);\n    console.log(\"estoy en API User autenticaUser\");\n    return fetch(`http://localhost:5000/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Accept\": 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(response => response.json());\n  }\n\n  static RegistrarUser(body) {\n    //console.log(\"llegue API user\")\n    //console.log(body)\n    return fetch(`http://localhost:5000/register`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Accept\": 'application/json'\n      },\n      body: JSON.stringify(body)\n    }) //alert(\"El usuario ha sido registrado satisfactoriamente\")\n    .then(response => response.json());\n  }\n\n  async RegistrarUser1(body) {\n    //console.log(\"llegue API user\")\n    //console.log(body)\n    let result = await fetch(`http://localhost:5000/register`, {\n      'method': 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Accept\": 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    result = await result.json() //alert(\"El usuario ha sido registrado satisfactoriamente\")\n    .then(response => response.json());\n  }\n\n}","map":{"version":3,"sources":["D:/ProyectosArian/final-zombiz/src/servicio/APIUser.js"],"names":["APIUser","AutenticaUser","body","console","log","fetch","method","headers","JSON","stringify","then","response","json","RegistrarUser","RegistrarUser1","result"],"mappings":"AAAA,eAAe,MAAMA,OAAN,CAAa;AAEJ,SAAbC,aAAa,CAAEC,IAAF,EAAO;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,WAAOC,KAAK,CAAE,6BAAF,EAA+B;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,OAAO,EAAG;AACN,wBAAe,kBADT;AAEN,kBAAU;AAFJ,OAF6B;AAMvCL,MAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AANiC,KAA/B,CAAL,CASNQ,IATM,CASDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATX,CAAP;AAUH;;AAEmB,SAAbC,aAAa,CAAEX,IAAF,EAAO;AACvB;AACA;AACA,WAAOG,KAAK,CAAE,gCAAF,EAAkC;AAC1C,gBAAS,MADiC;AAE1CE,MAAAA,OAAO,EAAG;AACV,wBAAe,kBADL;AAEV,kBAAU;AAFA,OAFgC;AAM9CL,MAAAA,IAAI,EAACM,IAAI,CAACC,SAAL,CAAeP,IAAf;AANyC,KAAlC,CAAL,CAQP;AARO,KASNQ,IATM,CASDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATX,CAAP;AAUH;;AAEmB,QAAdE,cAAc,CAAEZ,IAAF,EAAO;AACvB;AACA;AACA,QAAIa,MAAM,GAAG,MAAMV,KAAK,CAAE,gCAAF,EAAkC;AACtD,gBAAS,MAD6C;AAEtDE,MAAAA,OAAO,EAAG;AACV,wBAAe,kBADL;AAEV,kBAAU;AAFA,OAF4C;AAM1DL,MAAAA,IAAI,EAACM,IAAI,CAACC,SAAL,CAAeP,IAAf;AANqD,KAAlC,CAAxB;AAQAa,IAAAA,MAAM,GAAG,MAAMA,MAAM,CAACH,IAAP,GACf;AADe,KAEdF,IAFc,CAETC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFH,CAAf;AAGH;;AA9CuB","sourcesContent":["export default class APIUser{\r\n\r\n    static AutenticaUser (body){\r\n        console.log(body)\r\n        console.log(\"estoy en API User autenticaUser\")\r\n        return fetch(`http://localhost:5000/login`,{\r\n            method: 'POST',\r\n            headers : {\r\n                'Content-Type':'application/json',\r\n                \"Accept\" :'application/json' \r\n                },\r\n            body: JSON.stringify(body)\r\n            \r\n        })\r\n        .then(response => response.json())\r\n    }\r\n\r\n    static RegistrarUser (body){\r\n        //console.log(\"llegue API user\")\r\n        //console.log(body)\r\n        return fetch(`http://localhost:5000/register`,{\r\n            'method':'POST',\r\n            headers : {\r\n            'Content-Type':'application/json',\r\n            \"Accept\" :'application/json' \r\n            },\r\n        body:JSON.stringify(body)\r\n        })\r\n        //alert(\"El usuario ha sido registrado satisfactoriamente\")\r\n        .then(response => response.json())\r\n    }\r\n    \r\n    async RegistrarUser1 (body){\r\n        //console.log(\"llegue API user\")\r\n        //console.log(body)\r\n        let result = await fetch(`http://localhost:5000/register`,{\r\n            'method':'POST',\r\n            headers : {\r\n            'Content-Type':'application/json',\r\n            \"Accept\" :'application/json' \r\n            },\r\n        body:JSON.stringify(body)\r\n        })\r\n        result = await result.json()\r\n        //alert(\"El usuario ha sido registrado satisfactoriamente\")\r\n        .then(response => response.json())\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}