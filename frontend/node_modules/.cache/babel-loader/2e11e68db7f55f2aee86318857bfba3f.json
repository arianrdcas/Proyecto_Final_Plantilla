{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProyectosArian\\\\final-zombiz\\\\src\\\\components\\\\LoginUser.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Col, Row, InputGroup, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginUser() {\n  _s();\n\n  let user = JSON.parse(localStorage.getItem('user-info'));\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState();\n\n  async function ulogin() {\n    //const ulogin = () => {\n    //console.log(\"hola estoy en login\")\n    //console.warn(username, password)\n\n    /*APIUser.AutenticaUser({username, password})\r\n    //.then(response => console.log(JSON.parse(response)))\r\n    .then((response) => JSON.stringify(response))\r\n    .catch(error => console.log(error))\r\n      if (username){\r\n        console.log(\"lleguÃ© aqui\")\r\n        return history.push('/gestionar')\r\n    }*/\n    let item = {\n      username,\n      password\n    };\n    let result = await fetch(`http://localhost:5000/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Accept\": 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    result = await result.json();\n    localStorage.setItem(\"user-info\", JSON.stringify(result));\n\n    if (user && user.name) {\n      localStorage.clear();\n      window.location.href = '/gestionar';\n    }\n  }\n\n  const uClose = () => {\n    console.log(\"hola estoy en login y quiero cerrar\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade bs-example-modal-sm\",\n      tabIndex: -1,\n      role: \"dialog\",\n      \"aria-labelledby\": \"mySmallModalLabel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-sm\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"modal\",\n              \"aria-label\": \"Close\",\n              onClick: uClose,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"modal-title\",\n              id: \"mySmallModalLabel\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"sm-frm\",\n              style: {\n                padding: 25\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"username\",\n                className: \"form-control\",\n                placeholder: \"username\",\n                onChange: e => setUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                className: \"form-control\",\n                placeholder: \"password\",\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-default\",\n                type: \"button\",\n                onClick: ulogin,\n                children: \"Enviar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginUser, \"pQFzRX24KkkKCS9IJZb9aeQJ9nY=\");\n\n_c = LoginUser;\nexport default LoginUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginUser\");","map":{"version":3,"sources":["D:/ProyectosArian/final-zombiz/src/components/LoginUser.js"],"names":["React","useState","Col","Row","InputGroup","Form","Button","LoginUser","user","JSON","parse","localStorage","getItem","username","setUsername","password","setPassword","error","setError","ulogin","item","result","fetch","method","headers","body","stringify","json","setItem","name","clear","window","location","href","uClose","console","log","padding","e","target","value"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport{ Col, Row, InputGroup, Form, Button } from 'react-bootstrap'\r\n\r\nfunction LoginUser () {\r\n\r\n    let user = JSON.parse(localStorage.getItem('user-info'))\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [error, setError] = useState();\r\n\r\n    async function ulogin(){\r\n\r\n    //const ulogin = () => {\r\n        //console.log(\"hola estoy en login\")\r\n        //console.warn(username, password)\r\n        /*APIUser.AutenticaUser({username, password})\r\n        //.then(response => console.log(JSON.parse(response)))\r\n        .then((response) => JSON.stringify(response))\r\n        .catch(error => console.log(error))\r\n\r\n        if (username){\r\n            console.log(\"lleguÃ© aqui\")\r\n            return history.push('/gestionar')\r\n        }*/\r\n\r\n        let item = {username, password}\r\n        let result = await fetch(`http://localhost:5000/login`,{\r\n            method: 'POST',\r\n            headers : {\r\n                'Content-Type':'application/json',\r\n                \"Accept\" :'application/json' \r\n                },\r\n            body: JSON.stringify(item) \r\n        });\r\n\r\n        result = await result.json();\r\n        localStorage.setItem(\"user-info\",JSON.stringify(result))\r\n\r\n        if (user && user.name){\r\n            localStorage.clear();\r\n            window.location.href = '/gestionar';\r\n        }\r\n    }\r\n\r\n    const uClose = () => {\r\n        console.log(\"hola estoy en login y quiero cerrar\")\r\n    }\r\n\r\n    return ( \r\n        <>\r\n            {/* small modal */}\r\n            <div className=\"modal fade bs-example-modal-sm\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"mySmallModalLabel\">\r\n                <div className=\"modal-dialog modal-sm\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={uClose}\r\n                            >\r\n                                <span aria-hidden=\"true\">\r\n                                    <i className=\"fa fa-close\" />\r\n                                </span>\r\n                            </button>\r\n                            <h4 className=\"modal-title\" id=\"mySmallModalLabel\">\r\n                            Sign In\r\n                            </h4>\r\n                            \r\n                            <form className=\"sm-frm\" style={{ padding: 25 }} >\r\n                                <label>Name :</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name = \"username\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"username\"\r\n                                    onChange={(e) => setUsername(e.target.value)}\r\n                                />\r\n                                <label>Password :</label>\r\n                                <input\r\n                                    type=\"password\" \r\n                                    name = \"password\" \r\n                                    className=\"form-control\"\r\n                                    placeholder=\"password\"   \r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                                <button className=\"btn btn-default\" type=\"button\" onClick={ulogin}>\r\n                                    Enviar\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default LoginUser;"]},"metadata":{},"sourceType":"module"}