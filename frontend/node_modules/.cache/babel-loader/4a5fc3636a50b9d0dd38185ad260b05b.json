{"ast":null,"code":"const getState = _ref => {\n  let {\n    getStore,\n    getActions,\n    setStore\n  } = _ref;\n  return {\n    store: {\n      nombre: \"\",\n      email: \"\",\n      password: \"\",\n      isAuth: false,\n      proyecto: \"\",\n      descripcion: \"\",\n      autor: \"\",\n      currentUser: [],\n      profile: null\n    },\n    actions: {\n      isAuthenticated: () => {\n        //console.log(\"verificanco usuario\");\n        if (sessionStorage.getItem(\"isAuth\")) {\n          setStore({\n            isAuth: sessionStorage.getItem(\"isAuth\"),\n            currentUser: JSON.parse(sessionStorage.getItem(\"currentUser\"))\n          });\n        }\n      },\n      register: dataUser => {\n        //datos \n        //console.log(dataUser)\n        fetch(\"http://127.0.0.1:5000/api/register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(dataUser) //datos\n\n        }).then(resp => resp.json()).then(response => console.log(response)).catch(error => console.error(error));\n      },\n      handleChange: e => {\n        setStore({\n          [e.target.name]: e.target.value\n        });\n      },\n      login: e\n    }\n  };\n};\n\nexport default getState;","map":{"version":3,"sources":["D:/ProyectosArian/Trabajo_Final_agosto/frontend/src/store/flux.js"],"names":["getState","getStore","getActions","setStore","store","nombre","email","password","isAuth","proyecto","descripcion","autor","currentUser","profile","actions","isAuthenticated","sessionStorage","getItem","JSON","parse","register","dataUser","fetch","method","headers","body","stringify","then","resp","json","response","console","log","catch","error","handleChange","e","target","name","value","login"],"mappings":"AAAA,MAAMA,QAAQ,GAAE,QAAoC;AAAA,MAAnC;AAACC,IAAAA,QAAD;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA;AAAvB,GAAmC;AAChD,SAAM;AACFC,IAAAA,KAAK,EAAC;AACFC,MAAAA,MAAM,EAAC,EADL;AAEFC,MAAAA,KAAK,EAAC,EAFJ;AAGFC,MAAAA,QAAQ,EAAC,EAHP;AAIFC,MAAAA,MAAM,EAAE,KAJN;AAKFC,MAAAA,QAAQ,EAAC,EALP;AAMFC,MAAAA,WAAW,EAAC,EANV;AAOFC,MAAAA,KAAK,EAAC,EAPJ;AAQFC,MAAAA,WAAW,EAAE,EARX;AASFC,MAAAA,OAAO,EAAE;AATP,KADJ;AAaFC,IAAAA,OAAO,EAAE;AAELC,MAAAA,eAAe,EAAE,MAAM;AACnB;AACA,YAAIC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAJ,EAAsC;AACpCd,UAAAA,QAAQ,CAAC;AACPK,YAAAA,MAAM,EAAEQ,cAAc,CAACC,OAAf,CAAuB,QAAvB,CADD;AAEPL,YAAAA,WAAW,EAAEM,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAX;AAFN,WAAD,CAAR;AAID;AACJ,OAVI;AAYLG,MAAAA,QAAQ,EAAGC,QAAD,IAAc;AAAE;AACtB;AACAC,QAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,UAAAA,MAAM,EAAE,MADkC;AAE1CC,UAAAA,OAAO,EAAE;AAAE,4BAAiB;AAAnB,WAFiC;AAG1CC,UAAAA,IAAI,EAAEP,IAAI,CAACQ,SAAL,CAAeL,QAAf,CAHoC,CAGV;;AAHU,SAAvC,CAAL,CAKGM,IALH,CAKSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EALlB,EAMGF,IANH,CAMSG,QAAD,IAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CANtB,EAOGG,KAPH,CAOUC,KAAD,IAAWH,OAAO,CAACG,KAAR,CAAcA,KAAd,CAPpB;AAQH,OAtBI;AAwBLC,MAAAA,YAAY,EAAGC,CAAC,IAAI;AAChBjC,QAAAA,QAAQ,CAAC;AACP,WAACiC,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AADnB,SAAD,CAAR;AAGH,OA5BI;AA8BLC,MAAAA,KAAK,EAAEJ;AA9BF;AAbP,GAAN;AA+CH,CAhDD;;AAkDA,eAAepC,QAAf","sourcesContent":["const getState =({getStore, getActions, setStore})=>{\r\n    return{\r\n        store:{\r\n            nombre:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            isAuth: false,\r\n            proyecto:\"\",\r\n            descripcion:\"\",\r\n            autor:\"\",\r\n            currentUser: [],\r\n            profile: null\r\n        },\r\n\r\n        actions: {\r\n\r\n            isAuthenticated: () => {\r\n                //console.log(\"verificanco usuario\");\r\n                if (sessionStorage.getItem(\"isAuth\")) {\r\n                  setStore({\r\n                    isAuth: sessionStorage.getItem(\"isAuth\"),\r\n                    currentUser: JSON.parse(sessionStorage.getItem(\"currentUser\")),\r\n                  });\r\n                }\r\n            },\r\n\r\n            register: (dataUser) => { //datos \r\n                //console.log(dataUser)\r\n                fetch(\"http://127.0.0.1:5000/api/register\", {\r\n                  method: \"POST\",\r\n                  headers: { \"Content-type\" : \"application/json\"},\r\n                  body: JSON.stringify(dataUser), //datos\r\n                })\r\n                  .then((resp) => resp.json())\r\n                  .then((response) => console.log(response))\r\n                  .catch((error) => console.error(error));\r\n            },\r\n\r\n            handleChange : e => {\r\n                setStore({\r\n                  [e.target.name]: e.target.value\r\n                })\r\n            }, \r\n\r\n            login: e\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default getState;"]},"metadata":{},"sourceType":"module"}