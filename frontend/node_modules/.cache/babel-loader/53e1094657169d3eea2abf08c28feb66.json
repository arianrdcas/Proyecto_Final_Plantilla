{"ast":null,"code":"const getState = _ref => {\n  let {\n    getStore,\n    getActions,\n    setStore\n  } = _ref;\n  return {\n    store: {\n      name: \"\",\n      emailuser: \"\",\n      password: \"\",\n      error: null,\n      isAuth: false,\n      nombre: \"\",\n      descripcion: \"\",\n      autor: \"\",\n      value: null,\n      currentUser: [],\n      profile: null,\n      proyectos: [],\n      modal: false\n    },\n    actions: {\n      isAuthenticated: () => {\n        if (sessionStorage.getItem(\"isAuth\")) {\n          setStore({\n            isAuth: sessionStorage.getItem(\"isAuth\"),\n            currentUser: JSON.parse(sessionStorage.getItem(\"currentUser\"))\n          });\n        }\n      },\n      register: (e, history) => {\n        e.preventDefault();\n        const {\n          name,\n          emailuser,\n          password\n        } = getStore();\n        const dataUser = {\n          name: name,\n          emailuser: emailuser,\n          password: password\n        };\n        console.log(dataUser);\n        fetch(\"http://127.0.0.1:5000/api/users/register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(dataUser)\n        }).then(resp => resp.json()).then(response => console.log(response)).catch(error => console.error(error));\n        e.target.reset();\n        history.push(\"/\");\n      },\n      handleChange: e => {\n        setStore({\n          [e.target.name]: e.target.value\n        });\n      },\n      handleLogin: async (e, history) => {\n        e.preventDefault();\n\n        try {\n          const {\n            name,\n            password\n          } = getStore();\n          const datos = {\n            name: name,\n            password: password\n          }; //console.log(datos);\n\n          const resp = await fetch(\"http://127.0.0.1:5000/api/users/login\", {\n            method: \"POST\",\n            body: JSON.stringify(datos),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n          const infoUser = await resp.json();\n\n          if (infoUser.msg) {\n            setStore({\n              password: \"\",\n              error: infoUser.msg\n            });\n          } else {\n            setStore({\n              nombre: \"\",\n              password: \"\",\n              error: null,\n              currentUser: infoUser,\n              isAuth: true\n            });\n            sessionStorage.setItem(\"isAuth\", true);\n            sessionStorage.setItem(\"currentUser\", JSON.stringify(infoUser));\n            history.push('/');\n          }\n        } catch (error) {\n          setStore({\n            error: error.message\n          });\n        }\n\n        history.push('/');\n      },\n      insertarProyecto: (e, history) => {\n        e.preventDefault();\n        const {\n          nombre,\n          descripcion,\n          autor\n        } = getStore();\n        const dataForm = {\n          nombre: nombre,\n          descripcion: descripcion,\n          autor: autor\n        };\n        console.log(dataForm);\n        fetch(\"http://127.0.0.1:5000/api/proyectos/register\", {\n          method: \"POST\",\n          body: JSON.stringify(dataForm),\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        }).then(resp => resp.json()).then(response => console.log(response)).then(response => {\n          console.log(response);\n          setStore({\n            nombre: \" \",\n            descripcion: \" \",\n            autor: \" \",\n            modal: true\n          });\n        }).catch(error => console.error(error)); //history.push(\"/verproyecto\")\n      },\n      fetchProyecto: () => {\n        fetch(\"http://127.0.0.1:5000/api/proyectos\", {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(resp => resp.json()).then(response => {\n          //console.log(response)\n          setStore({\n            proyectos: response\n          });\n        }).catch(error => console.log(error));\n      },\n      fetchOneProyecto: id => {\n        var idproyect = id;\n        fetch(`http://127.0.0.1:5000/api/proyecto/${idproyect}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(resp => resp.json()).then(response => {\n          setStore({\n            proyectos: response,\n            nombre: response[0].nombre,\n            descripcion: response[0].descripcion,\n            autor: response[0].autor\n          });\n        }).catch(error => console.log(error));\n      },\n      logout: history => {\n        sessionStorage.clear();\n        setStore({\n          isAuth: false,\n          currentUser: []\n        });\n        history.push(\"/\");\n      },\n      delete_proyecto: id => {\n        var idproyect = parseInt(id);\n        fetch(`http://127.0.0.1:5000/api/proyectos/delete/${idproyect}`, {\n          method: 'DELETE'\n        }).then(result => {\n          result.json().then(resp => {\n            console.warn(resp);\n          });\n        });\n      },\n      editar_proyecto: (e, id, history) => {\n        console.log(\"estoy en flux\");\n        e.preventDefault();\n        var idproyect = parseInt(id);\n        const {\n          nombre,\n          descripcion,\n          autor\n        } = getStore();\n        const dataFormUpdate = {\n          nombre: nombre,\n          descripcion: descripcion,\n          autor: autor\n        };\n        console.log(dataFormUpdate);\n        fetch(`http://127.0.0.1:5000/api/proyectos/editar/${idproyect}`, {\n          method: \"PUT\",\n          body: JSON.stringify(dataFormUpdate),\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        }).then(resp => resp.json()).then(response => console.log(response)).catch(error => console.error(error));\n        history.push(\"/verproyecto\");\n      }\n    }\n  };\n};\n\nexport default getState;","map":{"version":3,"sources":["D:/ProyectosArian/Trabajo_Final_agosto/frontend/src/store/flux.js"],"names":["getState","getStore","getActions","setStore","store","name","emailuser","password","error","isAuth","nombre","descripcion","autor","value","currentUser","profile","proyectos","modal","actions","isAuthenticated","sessionStorage","getItem","JSON","parse","register","e","history","preventDefault","dataUser","console","log","fetch","method","headers","body","stringify","then","resp","json","response","catch","target","reset","push","handleChange","handleLogin","datos","infoUser","msg","setItem","message","insertarProyecto","dataForm","fetchProyecto","fetchOneProyecto","id","idproyect","logout","clear","delete_proyecto","parseInt","result","warn","editar_proyecto","dataFormUpdate"],"mappings":"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","sourcesContent":["const getState = ({ getStore, getActions, setStore }) => {\r\n  return {\r\n    store: {\r\n      name: \"\",\r\n      emailuser: \"\",\r\n      password: \"\",\r\n      error: null,\r\n      isAuth: false,\r\n      nombre: \"\",\r\n      descripcion: \"\",\r\n      autor: \"\",\r\n      value:null,\r\n      currentUser: [],\r\n      profile: null,\r\n      proyectos:[],\r\n      modal: false\r\n    },\r\n\r\n    actions: {\r\n      isAuthenticated: () => {\r\n        if (sessionStorage.getItem(\"isAuth\")) {\r\n          setStore({\r\n            isAuth: sessionStorage.getItem(\"isAuth\"),\r\n            currentUser: JSON.parse(sessionStorage.getItem(\"currentUser\")),\r\n          });\r\n        }\r\n      },\r\n\r\n      register: (e, history) => {\r\n        e.preventDefault();\r\n        const { name, emailuser, password } = getStore();\r\n        const dataUser = {\r\n          name: name,\r\n          emailuser: emailuser,\r\n          password: password,\r\n        };\r\n        console.log(dataUser);\r\n        fetch(\"http://127.0.0.1:5000/api/users/register\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(dataUser),\r\n          \r\n        })\r\n          .then((resp) => resp.json())\r\n          .then((response) => console.log(response))\r\n          .catch((error) => console.error(error));\r\n          e.target.reset();\r\n          history.push(\"/\")\r\n      },\r\n\r\n      handleChange: (e) => {\r\n        setStore({\r\n          [e.target.name]: e.target.value,  \r\n        })\r\n      },\r\n\r\n      handleLogin: async (e, history) => {\r\n        e.preventDefault();\r\n        try {\r\n          const { name, password } = getStore();\r\n          const datos = { name: name, password: password };\r\n          //console.log(datos);\r\n          const resp = await fetch(\"http://127.0.0.1:5000/api/users/login\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(datos),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          });\r\n          const infoUser = await resp.json();\r\n          if (infoUser.msg) {\r\n            setStore({\r\n              password: \"\",\r\n              error: infoUser.msg,\r\n            });\r\n          } else {\r\n            setStore({\r\n              nombre: \"\",\r\n              password: \"\",\r\n              error: null,\r\n              currentUser: infoUser,\r\n              isAuth: true,\r\n            });\r\n            sessionStorage.setItem(\"isAuth\", true);\r\n            sessionStorage.setItem(\"currentUser\", JSON.stringify(infoUser));\r\n            history.push('/')\r\n          }\r\n        } catch (error) {\r\n          setStore({\r\n            error: error.message,\r\n          });\r\n        }\r\n        history.push('/')\r\n      },\r\n\r\n      insertarProyecto: (e, history) => {\r\n        e.preventDefault();\r\n        const { nombre, descripcion, autor } = getStore();\r\n        const dataForm = {\r\n          nombre: nombre,\r\n          descripcion: descripcion,\r\n          autor: autor,\r\n        }\r\n        console.log(dataForm);\r\n        fetch(\"http://127.0.0.1:5000/api/proyectos/register\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(dataForm),\r\n          headers: { \"Content-type\": \"application/json\" },\r\n        })\r\n          .then((resp) => resp.json())\r\n          .then((response) => console.log(response))\r\n          .then((response) => {\r\n            console.log(response)\r\n            setStore({\r\n              nombre:\" \",\r\n              descripcion:\" \",\r\n              autor: \" \",\r\n              modal: true,\r\n            });\r\n          })\r\n          .catch((error) => console.error(error));\r\n          //history.push(\"/verproyecto\")\r\n          \r\n      },\r\n\r\n      \r\n\r\n      fetchProyecto: () => {\r\n        fetch(\"http://127.0.0.1:5000/api/proyectos\",{\r\n          method:'GET',\r\n          headers :{\r\n            'Content-Type' : 'application/json'\r\n          }})\r\n            .then((resp) => resp.json())\r\n            .then((response) => {\r\n              //console.log(response)\r\n              setStore({proyectos:response\r\n              })\r\n            })\r\n            .catch(error => console.log(error)); \r\n      }, \r\n\r\n\r\n      fetchOneProyecto: (id) => {\r\n        var idproyect = id\r\n        fetch(`http://127.0.0.1:5000/api/proyecto/${idproyect}`,{\r\n          method:'GET',\r\n          headers :{\r\n            'Content-Type' : 'application/json'\r\n          }})\r\n            .then((resp) => resp.json())\r\n            .then((response) => {\r\n              setStore({\r\n                proyectos:response,\r\n                nombre: response[0].nombre,\r\n                descripcion:response[0].descripcion,\r\n                autor: response[0].autor,\r\n              });\r\n            })\r\n            .catch(error => console.log(error));  \r\n      }, \r\n\r\n      logout:(history)=>{\r\n        sessionStorage.clear()\r\n        setStore({isAuth:false, currentUser:[]})\r\n        history.push(\"/\")\r\n      },\r\n      \r\n      delete_proyecto: (id) =>{\r\n        var idproyect = parseInt(id)\r\n        fetch(`http://127.0.0.1:5000/api/proyectos/delete/${idproyect}`, {\r\n          method: 'DELETE',\r\n        })\r\n        .then((result) =>{\r\n          result.json()\r\n          .then((resp)=>{\r\n            console.warn(resp)\r\n          })\r\n        })\r\n      }, \r\n\r\n      editar_proyecto: (e, id, history) => {\r\n        console.log(\"estoy en flux\");\r\n        e.preventDefault();\r\n        var idproyect = parseInt(id)\r\n        const { nombre, descripcion, autor } = getStore();\r\n        const dataFormUpdate = {\r\n          nombre: nombre,\r\n          descripcion: descripcion,\r\n          autor: autor,\r\n        };\r\n        console.log(dataFormUpdate);\r\n        fetch(`http://127.0.0.1:5000/api/proyectos/editar/${idproyect}`, {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(dataFormUpdate),\r\n          headers: { \"Content-type\": \"application/json\" },\r\n        })\r\n          .then((resp) => resp.json())\r\n          .then((response) => console.log(response))\r\n          .catch((error) => console.error(error));\r\n          history.push(\"/verproyecto\")\r\n      },\r\n      \r\n    },\r\n  };\r\n};\r\n\r\nexport default getState;"]},"metadata":{},"sourceType":"module"}