{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProyectosArian\\\\Trabajo_Final_agosto\\\\frontend\\\\src\\\\store\\\\app.Context.js\";\nimport { createContext, useEffect, useState } from \"react\";\nimport getState from \"./flux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext(null);\n\nconst injectContext = PassedComponent => {\n  var _s = $RefreshSig$();\n\n  const StoreWrapper = props => {\n    _s();\n\n    const [state, setState] = useState(getState({\n      getStore: () => state.store,\n      getActions: () => state.actions,\n      setStore: updateStore => setState({\n        store: Object.assign(state.store, updateStore),\n        actions: { ...state.actions\n        }\n      })\n    }));\n    useEffect(() => {}, []);\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: state,\n      children: /*#__PURE__*/_jsxDEV(PassedComponent, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(StoreWrapper, \"UJY7XZpYCbm3UHbWMHutkbGhE1s=\");\n\n  return StoreWrapper;\n};\n\nexport default injectContext;","map":{"version":3,"sources":["D:/ProyectosArian/Trabajo_Final_agosto/frontend/src/store/app.Context.js"],"names":["createContext","useEffect","useState","getState","Context","injectContext","PassedComponent","StoreWrapper","props","state","setState","getStore","store","getActions","actions","setStore","updateStore","Object","assign"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,QAArB;;AAEA,OAAO,MAAMC,OAAO,gBAAGJ,aAAa,CAAC,IAAD,CAA7B;;AAEP,MAAMK,aAAa,GAAGC,eAAe,IAAG;AAAA;;AACpC,QAAMC,YAAY,GAAGC,KAAK,IAAG;AAAA;;AAEzB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBR,QAAQ,CAACC,QAAQ,CAAC;AACvCQ,MAAAA,QAAQ,EAAE,MAAMF,KAAK,CAACG,KADiB;AAEvCC,MAAAA,UAAU,EAAE,MAAKJ,KAAK,CAACK,OAFgB;AAGvCC,MAAAA,QAAQ,EAAEC,WAAW,IAAGN,QAAQ,CAAC;AAC7BE,QAAAA,KAAK,EAAEK,MAAM,CAACC,MAAP,CAAcT,KAAK,CAACG,KAApB,EAA0BI,WAA1B,CADsB;AAE7BF,QAAAA,OAAO,EAAE,EAAC,GAAGL,KAAK,CAACK;AAAV;AAFoB,OAAD;AAHO,KAAD,CAAT,CAAjC;AAQAb,IAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;AAEA,wBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAEQ,KAAzB;AAAA,6BACI,QAAC,eAAD,OAAoBD;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAjBD;;AADoC,KAC9BD,YAD8B;;AAoBpC,SAAOA,YAAP;AACH,CArBD;;AAsBA,eAAeF,aAAf","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport getState from \"./flux\";\r\n\r\nexport const Context = createContext(null);\r\n\r\nconst injectContext = PassedComponent =>{\r\n    const StoreWrapper = props =>{\r\n\r\n        const [state, setState]= useState(getState({\r\n            getStore: () => state.store,\r\n            getActions: ()=> state.actions,\r\n            setStore: updateStore =>setState({\r\n                store: Object.assign(state.store,updateStore),\r\n                actions: {...state.actions}\r\n            })\r\n        }));\r\n        useEffect(() => {\r\n        }, []);\r\n        return(\r\n            <Context.Provider value={state}>\r\n                <PassedComponent{...props}/>\r\n            </Context.Provider>\r\n        );\r\n    };\r\n\r\n    return StoreWrapper;\r\n};\r\nexport default injectContext;"]},"metadata":{},"sourceType":"module"}